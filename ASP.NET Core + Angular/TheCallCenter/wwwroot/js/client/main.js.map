{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/callHub.ts","webpack:///./src/app/services/callService.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/views/call.component.html","webpack:///./src/app/views/call.component.ts","webpack:///./src/app/views/calllist.component.html","webpack:///./src/app/views/calllist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CallListView } from \"./views/calllist.component\";\nimport { CallView } from \"./views/call.component\";\n\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/call-list\", pathMatch: 'full' },\n  { path: \"call-list\", component: CallListView },\n  { path: \"call/:id\", component: CallView }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div>\\r\\n  <div id=\\\"theWarning\\\" class=\\\"alert alert-warning\\\" [hidden]=\\\"!error\\\">{{ error }}</div>\\r\\n  <div id=\\\"theWarning\\\" class=\\\"alert alert-primary\\\"  [hidden]=\\\"!isBusy\\\">Loading...</div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\nimport { CallService } from \"./services\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styles: []\n})\nexport class AppComponent {\n\n  constructor(private callService: CallService) { }\n\n  get error() {\n    return this.callService.error;\r\n  }\n\n  get isBusy() {\n    return this.callService.isBusy;\r\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { CallListView } from \"./views/calllist.component\";\nimport { CallView } from \"./views/call.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CallListView,\n    CallView\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport default class CallHub {\r\n\r\n  private newCallMessage = new Subject<any>();\r\n  private answeredCallMessage = new Subject<any>();\r\n  private client: HubConnection;\r\n\r\n  constructor() {\r\n\r\n    this.client = new HubConnectionBuilder()\n      .withUrl(\"/api/call-hub\")\n      .build();\n\n    this.client.on(\"NewCall\", call => {\n      this.newCallMessage.next(call);\n    });\n\n    this.client.on(\"CallAnswered\", call => {\n      this.answeredCallMessage.next(call);\r\n    })\n\r\n  }\r\n\r\n  public NewCallMessage() {\r\n    return this.newCallMessage.asObservable();\r\n  }\r\n\r\n  public AnsweredCallMessage() {\r\n    return this.answeredCallMessage.asObservable();\r\n  }\r\n\r\n  public resolveCall(call) {\r\n    this.client.invoke(\"CallAnswered\", call);\r\n  }\r\n\r\n  start() {\r\n    this.client.start();\r\n  }\r\n\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Observable, of,  } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport CallHub from './callHub';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CallService {\r\n\r\n  constructor(private http: HttpClient, private callHub: CallHub) {\r\n    this.callHub.NewCallMessage()\r\n      .subscribe(call => this.addCall(call));\r\n\r\n    this.callHub.AnsweredCallMessage()\r\n      .subscribe(call => this.removeCall(call));\r\n  }\r\n\r\n  private isLoaded: boolean = false;\r\n  public calls = [];\r\n  public error = \"\";\r\n  public isBusy: boolean = false;\r\n\r\n  load(): Observable<boolean> {\r\n    this.isBusy = true;\r\n    if (this.isLoaded) {\r\n      return Observable.create(o => {\r\n        this.isBusy = false;\r\n        o.next(true);\r\n        o.complete();\r\n      });\r\n    } else {\r\n      return this.http.get(\"/api/calls\")\r\n        .pipe(\r\n          map((data: any[]) => {\r\n            this.isBusy = false;\r\n            this.calls = data;\r\n            this.callHub.start();\r\n            this.isLoaded = true;\r\n            return true;\r\n          }));\r\n    }\r\n  }\r\n\r\n  private findCall(id: number) { return this.calls.find(c => c.id == id); }\r\n\r\n  getCall(id) : Observable<any> {\r\n    this.isBusy = true;\r\n    if (this.isLoaded) {\r\n      return Observable.create(ob => {\r\n        this.isBusy = false;\r\n        ob.next(this.findCall(id));\r\n        ob.complete();\r\n      });\r\n    } else {\r\n      return Observable.create(ob => {\r\n        this.load().subscribe(success => {\r\n          this.isBusy = false;\r\n          ob.next(this.findCall(id));\r\n          ob.complete();\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  addCall(call): void {\r\n    if (this.isLoaded) {\r\n      this.calls.push(call);\r\n    } else {\r\n      this.load().subscribe(success => {\r\n        this.calls.push(call);\r\n      });\r\n    }\r\n  }\r\n\r\n  private removeCall(call): void {\r\n    let index = this.calls.findIndex(c => c.id === call.id);\r\n    if (index > -1) {\r\n      this.calls.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  markAsAnswered(call): Observable<boolean> {\r\n    this.isBusy = true;\r\n    return this.http.patch(`/api/calls/${call.id}/answer`, null)\r\n      .pipe(\r\n        map(data => {\r\n          this.removeCall(call);      \r\n          this.isBusy = false;\r\n          this.callHub.resolveCall(call);\r\n          return true;\r\n        })\r\n      );\r\n  }\r\n\r\n}","﻿export * from \"./callService\";","module.exports = \"<div>\\r\\n  <div><a routerLink=\\\"/call-list\\\" class=\\\"btn btn-sm btn-secondary\\\">Back</a></div>\\r\\n  <table class=\\\"table\\\" *ngIf=\\\"call\\\">\\r\\n    <tr>\\r\\n      <td>Name</td>\\r\\n      <td>{{ call.name }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>Email</td>\\r\\n      <td>{{ call.email }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>Name</td>\\r\\n      <td>{{ call.callTime | date }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td>Problem</td>\\r\\n      <td>{{ call.problem }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td colspan=\\\"2\\\"><button class=\\\"btn btn-success\\\" (click)=\\\"answer()\\\">Marked Answered</button></td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CallService } from \"../services\";\r\n\r\n@Component({\r\n  templateUrl: 'call.component.html',\r\n  styles: []\r\n})\r\nexport class CallView implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private callService: CallService, private router: Router) {\r\n  }\r\n\r\n  call = {};\r\n\r\n  ngOnInit(): void {\r\n    this.callService.getCall(this.route.snapshot.params.id)\r\n      .subscribe(\r\n        call => {\r\n          if (!call) {\r\n            this.router.navigate(['/call-list']);\r\n          }\r\n          this.call = call;\r\n        },\r\n        () => {\r\n          this.router.navigate(['/call-list']);\r\n        });\r\n  }\r\n\r\n  answer() {\r\n    this.callService.markAsAnswered(this.call)\r\n      .subscribe(success => {\r\n        this.router.navigate(['/call-list'])\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-10 offset-1\\\">\\r\\n    <h3>Call Log</h3>\\r\\n    <table class=\\\"table table-striped table-bordered\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>From</th>\\r\\n          <th>Email</th>\\r\\n          <th>Call Time</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let c of calls\\\">\\r\\n          <td>{{ c.name }}</td>\\r\\n          <td>{{ c.email }}</td>\\r\\n          <td>{{ c.callTime | date }}</td>\\r\\n          <td>\\r\\n            <a routerLink=\\\"/call/{{c.id}}\\\" class=\\\"btn btn-sm btn-warning\\\">Open</a>\\r\\n          <!--<router-link :to=\\\"{ name: 'call', params: { call: c }}\\\" class=\\\"btn btn-sm btn-warning\\\">Open</router-link>--></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { CallService } from '../services';\r\n\r\n@Component({\n  templateUrl: 'calllist.component.html',\n  styles: []\n})\nexport class CallListView {\n\n  constructor(private callService: CallService) {\n  }\n\n  calls = [];\n\n  ngAfterContentInit() {\r\n    this.callService.load()\r\n      .subscribe(success => {\r\n        this.calls = this.callService.calls;\r\n      });\r\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}